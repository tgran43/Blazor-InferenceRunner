@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <MudThemeProvider />
    <MudDialogProvider />
    <MudSnackbarProvider />

    <MudLayout>
        <MudAppBar>
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
            <AuthorizeView>
                <Authorized>
                    <MudText Typo="Typo.body1" Class="ml-auto">@UserEmail</MudText>
                </Authorized>
            </AuthorizeView>
        </MudAppBar>
        <MudDrawer @bind-Open="@_drawerOpen">
            <MyNavMenu />
        </MudDrawer>
        <MudMainContent>
            @Body
        </MudMainContent>
    </MudLayout>
</CascadingAuthenticationState>

@code {
    bool _drawerOpen = true;
    private string UserEmail { get; set; }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        await UpdateUserEmail();
    }

    private async Task UpdateUserEmail()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            UserEmail = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)?.Value;
        }
        else
        {
            UserEmail = null;
        }
    }
}
